# Multivariate
## Rack based multivariate testing framework

Multivariate is a rack based testing framework designed to work with Rails, Sinatra or any other rack based app.

Multivariate is heavily inspired by the Abingo and Vanity rails ab testing plugins and Resque in its use of Redis.

## Requirements

Multivariate uses redis as a datastore.

If you're on OS X, Homebrew is the simplest way to install Redis:

    $ brew install redis
    $ redis-server /usr/local/etc/redis.conf

You now have a Redis daemon running on 6379.

## Usage

If you are using bundler: add multivariate to your Gemfile:

    gem 'multivariate'

Then run:

    bundle install

Otherwise install the gem:

  gem install multivariate

and require it in your project:

  require 'multivariate'

## Web Interface

Multivariate comes with a Sinatra-based front end to get an overview of how your experiments are doing.

You can mount this inside your app using Rack::URLMap in your `config.ru`

    require 'multivariate/server'

    run Rack::URLMap.new \
      "/"       => Your::App.new,
      "/multivariate" => Multivariate::Server.new

You may want to password protect that page, you can do so with `Rack::Auth::Basic`

    Multivariate::Server.use Rack::Auth::Basic do |username, password|
      username == 'admin' && password == 'p4s5w0rd'
    end

## Configuration

You may want to change the Redis host and port Multivariate connects to, or
set various other options at startup.

Multivariate has a `redis` setter which can be given a string or a Redis
object. This means if you're already using Redis in your app, Multivariate
can re-use the existing connection.

String: `Multivariate.redis = 'localhost:6379'`

Redis: `Multivariate.redis = $redis`

For our rails app we have a `config/initializers/multivariate.rb` file where
we load `config/multivariate.yml` by hand and set the Redis information
appropriately.

Here's our `config/multivariate.yml`:

    development: localhost:6379
    test: localhost:6379
    staging: redis1.example.com:6379
    fi: localhost:6379
    production: redis1.example.com:6379

And our initializer:

    rails_root = ENV['RAILS_ROOT'] || File.dirname(__FILE__) + '/../..'
    rails_env = ENV['RAILS_ENV'] || 'development'

    multivariate_config = YAML.load_file(rails_root + '/config/multivariate.yml')
    Multivariate.redis = multivariate_config[rails_env]


## Namespaces

If you're running multiple, separate instances of Multivariate you may want
to namespace the keyspaces so they do not overlap. This is not unlike
the approach taken by many memcached clients.

This feature is provided by the [redis-namespace][rs] library, which
Multivariate uses by default to separate the keys it manages from other keys
in your Redis server.

Simply use the `Multivariate.redis.namespace` accessor:

    Multivariate.redis.namespace = "resque:GitHub"

We recommend sticking this in your initializer somewhere after Redis
is configured.

## Note on Patches/Pull Requests

 * Fork the project.
 * Make your feature addition or bug fix.
 * Add tests for it. This is important so I don't break it in a
   future version unintentionally.
 * Commit, do not mess with rakefile, version, or history.
   (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
 * Send me a pull request. Bonus points for topic branches.

## Copyright

Copyright (c) 2011 Andrew Nesbitt. See LICENSE for details.